# Docker Compose Test Environment Configuration
# Usage: docker-compose -f docker-compose.test.yml up

services:
  # Note: Supabase is started by the CI workflow before Docker Compose
  # so we don't need a Supabase container here

  # Test Runner Service - Runs all tests in containers
  test-runner:
    build:
      context: ../../
      dockerfile: infrastructure/docker/Dockerfile.test
    container_name: aizen-test-runner
    environment:
      NODE_ENV: test
      CI: true
      # Use Supabase running on host (started by CI)
      SUPABASE_URL: http://host.docker.internal:54321
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      SUPABASE_SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      DATABASE_URL: postgresql://postgres:postgres@host.docker.internal:54322/postgres
      # Redis test connection
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ../../:/app
      - /app/node_modules
      - test-results:/app/test-results
      - coverage:/app/coverage
    command: npm run test:coverage
    networks:
      - aizen-network

  # Redis for test environment (isolated from dev)
  redis:
    image: redis:7.4-alpine
    container_name: aizen-redis-test
    ports:
      - "6380:6379" # Different port to avoid conflicts
    volumes:
      - redis-test-data:/data
    environment:
      # Test-specific Redis configuration
      REDIS_MAXMEMORY: 100mb
      REDIS_MAXMEMORY_POLICY: allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - aizen-network

  # Note: Service containers removed as they're not needed for running tests
  # The test-runner container handles all test execution

networks:
  aizen-network:
    name: aizen-test-network

volumes:
  redis-test-data:
    name: aizen-redis-test-data
  test-results:
    name: aizen-test-results
  coverage:
    name: aizen-test-coverage
